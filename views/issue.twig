{% extends 'layout_page.twig' %}

{% set page = 'issues' %}

{% block title %}GitList{% endblock %}

{% block content %}
<ul class="breadcrumb">
    <li><a href="{{ path('repository', {repo: repo}) }}issues">back to issue list</a></li>
</ul>

{% if issue.state == 0 %}
<span class="label label-success" style = "font-size: large;">
    未解决
</span>

{% endif %}

{% if issue.state == 1 %}
<span class="label label-important" style = "font-size: large;">
    搞定了
</span>
{% endif %}

<hr />
<h3>{{ issue.text }}</h3>
<hr />

<input id="issueInputText" 
       class = "span12" 
       type="text" 
       placeholder="Create comment something…" 
       style="margin-top: 10px; margin-right: 20px;">

<button style="margin-bottom: 10px" 
        class="btn btn-success" 
        onClick="onCreate({{issue.id}},{{issue.project_id}})">Comment</button>

{% if issue.state == 0 %}
<button style="margin-bottom: 10px;margin-left: 10px;" 
        class="btn btn" 
        onClick="onUpdateIssueState({{issue.id}}, 1, {{issue.project_id}})">Close</button>
{% endif %}

{% if issue.state == 1 %}
<button style="margin-bottom: 10px;margin-left: 10px;" 
        class="btn btn" 
        onClick="onUpdateIssueState({{issue.id}}, 0, {{issue.project_id}})">Reopen</button>
{% endif %}
<hr />

{% for date, comment in comments %}
<table class="table table-striped table-bordered">
    <thead>
        <tr>
            <th colspan="3">{{ date | date("F j, Y") }}</th>
        </tr>
    </thead>
    <tbody>
        {% for item in comment %}
            <tr>
                <td width="5%"><img src="{{item.user.avatar}}" /></td>
                <td width="95%">
                    <h4>{{ item.text }}</h4>
                    <span><a href="mailto:{{ item.user.email }}">{{item.user.nickname}}</a> created at  {{ item.created | date('d/m/Y \\a\\t H:i:s') }}</span>
                </td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
{% endfor %}


{% block javascripts %}
    <script type="text/javascript" >

            function getCookie(name) {
                var nameEQ = name + "=";
                var ca = document.cookie.split(';');    //把cookie分割成组
                for (var i = 0; i < ca.length; i++) {
                    var c = ca[i];                      //取得字符串
                    while (c.charAt(0) == ' ') {          //判断一下字符串有没有前导空格
                        c = c.substring(1, c.length);      //有的话，从第二位开始取
                    }
                    if (c.indexOf(nameEQ) == 0) {       //如果含有我们要的name
                        return unescape(c.substring(nameEQ.length, c.length));    //解码并截取我们要值
                    }
                }
                return false;
            }

            function make_base_auth(user, password) {
                var tok = user + ':' + password;
                var hash = btoa(tok);
                return "Basic " + hash;
            }

            function onCreate(issueId, projectId)
            {
                var text = $('#issueInputText').val();
                if (text.length == 0)
                {
                    alert('input empty');
                    return;
                }

                var username = getCookie('username');
                var password = getCookie('password');

                $.ajax({
                    url: "http://192.168.1.201/worklife/index.php/api/issues/create",
                    type: "post",
                    beforeSend: function(xhr) {
                        xhr.setRequestHeader('Authorization', make_base_auth(username, password));
                    },
                    data: {
                        text: text,
                        userid: "1",
                        reply_to: issueId,
                        project_id: projectId
                    },
                    success: function(data) {
                        location.reload();
                    },
                    error: function(xhr, data) {
                        if (xhr.status == 401)
                        {
                            window.location.href = "http://192.168.1.201/gitlist/login.html";
                        }

                        alert('failed');
                    }
                });
            }

            function onUpdateIssueState(issueId, state, projectId)
            {
                var username = getCookie('username');
                var password = getCookie('password');
                var nickname = getCookie('nickname');
                
                var textInput = $('#issueInputText').val();
                var text;

                if (state == 1)
                {
                    text = nickname + ' closed this issue and said ';
                }
                else if (state == 0)
                {
                    text = nickname + ' reopened this issue and said ';
                }

                if (textInput.length > 0)
                {
                    text += textInput;
                }
                else
                {
                    text += 'nothing';
                }

                $.ajax({
                    url: "http://192.168.1.201/worklife/index.php/api/issues/update_state",
                    type: "post",
                    data: {
                        id: issueId,
                        state: state
                    },
                    success: function() {

                        $.ajax({
                            url: "http://192.168.1.201/worklife/index.php/api/issues/create",
                            type: "post",
                            beforeSend: function(xhr) {
                                xhr.setRequestHeader('Authorization', make_base_auth(username, password));
                            },
                            data: {
                                text: text,
                                userid: "1",
                                reply_to: issueId,
                                project_id: projectId
                            },
                            success: function(data) {
                                location.reload();
                            },
                            error: function(xhr, data) {
                                if (xhr.status == 401)
                                {
                                    window.location.href = "http://192.168.1.201/gitlist/login.html";
                                }

                                alert('failed');
                            }
                        });
                    },
                    error: function(data) {
                        console.log(data);
                        alert(data.message);
                    }
                });
            }

        </script>
{% endblock %}

{% endblock %}
